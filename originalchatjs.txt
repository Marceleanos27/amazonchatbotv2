let chatHistory = [
  {
    role: "system",
    content: "You are a smart and friendly virtual assistant for an online store similar to Amazon. You help customers with questions about products, restocks, sizes, shipping, returns, and general shopping info. Do not say you're an AI. Respond as a helpful support assistant. Keep responses very short, offer product suggestions, and ask if they'd like a link from Amazon."
  }
];

const chatbox = document.getElementById("chat-messages");
const inputField = document.getElementById("user-input");

function toggleChatbot() {
  const container = document.getElementById("chatbot-container");
  container.classList.toggle("closed");
  const icon = document.getElementById("toggle-icon");
  icon.innerText = container.classList.contains("closed") ? "+" : "âˆ’";
}

function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function sendMessage() {
  const message = inputField.value.trim();
  if (!message) return;

  appendMessage("You", message, "user");
  chatHistory.push({ role: "user", content: message });
  inputField.value = "";
  appendMessage("Marcel", "Thinking...", "bot", true);

  try {
    await delay(1000); // prevent instant sending

    const response = await fetch("https://api.together.xyz/v1/chat/completions", {
      method: "POST",
      headers: {
        Authorization: "Bearer 30ee729733461e37e4d012dc8190172788b2833eaf07105967bd8bdaebb3967a",
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "Qwen/Qwen3-235B-A22B-Instruct-2507-tput",
        messages: chatHistory
      })
    });

    if (!response.ok) {
      throw new Error(`HTTP error ${response.status}: ${response.statusText}`);
    }

    const data = await response.json();
    const reply = data.choices?.[0]?.message?.content?.trim() || "No response.";

    chatHistory.push({ role: "assistant", content: reply });

    removeLastBotMessage();
    appendMessage("Marcel", reply, "bot");
  } catch (error) {
    console.error("Error:", error);
    removeLastBotMessage();
    appendMessage("Marcel", `Error: ${error.message}`, "bot");
  }
}

function appendMessage(sender, message, role, isTemp = false) {
  const msgDiv = document.createElement("div");
  msgDiv.classList.add("message", role);
  if (isTemp) msgDiv.classList.add("temp");
  msgDiv.innerHTML = `<strong>${sender}:</strong> ${message}`;
  chatbox.appendChild(msgDiv);
  chatbox.scrollTop = chatbox.scrollHeight;
}

function removeLastBotMessage() {
  const tempMsg = chatbox.querySelector(".bot.temp");
  if (tempMsg) chatbox.removeChild(tempMsg);
}
